#include "proxy.h"


/*
代理模式
就是两个类共同继承相同的父类，实现相同的接口名字，然后其中一个类A
包装类B，这样调用A，实际上是调用A里面的类B的相同函数。

实用场景
1，远程代理。为一个对象在不同地址空间提供局部代表。用于隐藏一个对
象存在于不同地址空间的事实。（应该就是即RPC调用，在内部函数里面还
包括了远程连接、认证、最后才是调用具体的函数，得到返回，然后返回
给主函数这一些系列操作）

2，虚拟代理。是根据需要创建开销很大的对象。通过它来存放实例化需要
很久的真实对象。就比如网站，有很多文字和图片，但是网站会很快打开
，能看到所有文字，但是图片却是一张一张的下载后才能看到。哪些未打
开的图片框，就是通过虚拟代理来替代真实图片。此时代理存储了真实
图片的路径和尺寸。

3，安全代理。用于控制访问权限的。
4，智能指引，可以在真实访问对象时，做一些额外的操作。

*/

//如果在cpp里面包含c定义的头文件
extern "C" {
}

int main(int argc, char **argv)
{
	proxyA a;
	a.do_operation();

	return 0;
}

